<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>duckdb, R et autres</title>
<link>https://nbc.github.io/posts.html</link>
<atom:link href="https://nbc.github.io/posts.xml" rel="self" type="application/rss+xml"/>
<description>Quelques notes souvent sur les données massives mais pas que</description>
<generator>quarto-1.7.31</generator>
<lastBuildDate>Sat, 12 Jul 2025 00:00:00 GMT</lastBuildDate>
<item>
  <title>de duckdb à st_to_sf</title>
  <dc:creator>Nicolas Chuche</dc:creator>
  <link>https://nbc.github.io/posts/2025-07-10-st_as_sf/</link>
  <description><![CDATA[ 




<p>Jusqu’à récemment, générer un dataframe SF à partir d’une requête duckdb imposait :</p>
<ol type="1">
<li>d’utiliser <code>ST_AsWKB</code> ou <code>ST_AsText</code> sur la colonne géométrie</li>
<li>de matérialiser les données pour les transférer à <code>sf::st_as_sf</code></li>
</ol>
<p>Avec les versions récentes de duckdb, de l’extension spatial et du package geoarrow, vous pouvez lui demander de générer une donnée réutilisable directement par <code>geoarrow</code> :</p>
<div class="cell">
<div class="sourceCode cell-code" id="annotated-cell-1" style="background: #f1f3f5;"><pre class="sourceCode r code-annotation-code code-with-copy code-annotated"><code class="sourceCode r"><span id="annotated-cell-1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(geoarrow)</span>
<span id="annotated-cell-1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(duckdb)</span>
<span id="annotated-cell-1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(sf)</span>
<span id="annotated-cell-1-4"></span>
<span id="annotated-cell-1-5">con <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbConnect</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">duckdb</span>())</span>
<span id="annotated-cell-1-6"></span>
<span id="annotated-cell-1-7">url <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://static.data.gouv.fr/resources/sirene-geolocalise-parquet/20240107-143656/sirene2024-geo.parquet"</span></span>
<span id="annotated-cell-1-8"></span>
<span id="annotated-cell-1-9">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbExecute</span>(con, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"LOAD spatial;"</span>)</span>
<span id="annotated-cell-1-10">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbExecute</span>(con, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"LOAD httpfs;"</span>)</span>
<a class="code-annotation-anchor" data-target-cell="annotated-cell-1" data-target-annotation="1" onclick="event.preventDefault();">1</a><span id="annotated-cell-1-11" class="code-annotation-target">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbExecute</span>(con, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CALL register_geoarrow_extensions()"</span>)</span>
<span id="annotated-cell-1-12"></span>
<span id="annotated-cell-1-13">dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tbl</span>(con, dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sql</span>(glue<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SELECT geometry </span></span>
<span id="annotated-cell-1-14"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                                       FROM read_parquet('{url}')</span></span>
<a class="code-annotation-anchor" data-target-cell="annotated-cell-1" data-target-annotation="2" onclick="event.preventDefault();">2</a><span id="annotated-cell-1-15" class="code-annotation-target"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                                       LIMIT 5"</span>))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<a class="code-annotation-anchor" data-target-cell="annotated-cell-1" data-target-annotation="3" onclick="event.preventDefault();">3</a><span id="annotated-cell-1-16" class="code-annotation-target">  arrow<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">to_arrow</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<a class="code-annotation-anchor" data-target-cell="annotated-cell-1" data-target-annotation="4" onclick="event.preventDefault();">4</a><span id="annotated-cell-1-17" class="code-annotation-target">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_as_sf</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">crs=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_crs</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2154</span>))</span><div class="code-annotation-gutter-bg"></div><div class="code-annotation-gutter"></div></code></pre></div>
<div class="cell-annotation">
<dl class="code-annotation-container-grid">
<dt data-target-cell="annotated-cell-1" data-target-annotation="1">1</dt>
<dd>
<span data-code-cell="annotated-cell-1" data-code-lines="11" data-code-annotation="1">demande à duckdb spatial d’ajouter les métadonnées geoarrow dans les colonnes de type géométrie</span>
</dd>
<dt data-target-cell="annotated-cell-1" data-target-annotation="2">2</dt>
<dd>
<span data-code-cell="annotated-cell-1" data-code-lines="15" data-code-annotation="2">grace à la commande précédente, cette ligne va retourner des géométries lisibles par geoarrow</span>
</dd>
<dt data-target-cell="annotated-cell-1" data-target-annotation="3">3</dt>
<dd>
<span data-code-cell="annotated-cell-1" data-code-lines="16" data-code-annotation="3">cette ligne transforme l’objet en un objet arrow</span>
</dd>
<dt data-target-cell="annotated-cell-1" data-target-annotation="4">4</dt>
<dd>
<span data-code-cell="annotated-cell-1" data-code-lines="17" data-code-annotation="4">geoarrow surcharge la fonction <code>st_as_sf</code> pour qu’elle puisse lire directement l’objet arrow</span>
</dd>
</dl>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Simple feature collection with 5 features and 0 fields
Geometry type: POINT
Dimension:     XY
Bounding box:  xmin: 3.735375 ymin: 49.38698 xmax: 3.738175 ymax: 49.39506
Projected CRS: RGF93 v1 / Lambert-93
                   geometry
1 POINT (3.738175 49.39245)
2 POINT (3.735375 49.38829)
3 POINT (3.735446 49.39507)
4 POINT (3.738132 49.38698)
5 POINT (3.735748 49.38712)</code></pre>
</div>
</div>
<section id="une-comparaison-rapide" class="level2">
<h2 class="anchored" data-anchor-id="une-comparaison-rapide">Une comparaison rapide</h2>
<p>Et c’est <strong>beaucoup</strong> plus rapide que toutes les autres méthodes :</p>
<div class="cell">
<details class="code-fold">
<summary>Montre moi le code du benchmark</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(arrow)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(duckdb)</span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(sf)</span>
<span id="cb2-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dplyr)</span>
<span id="cb2-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(glue)</span>
<span id="cb2-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(timemoir)</span>
<span id="cb2-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(geoarrow)</span>
<span id="cb2-8"></span>
<span id="cb2-9">sample_size <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e8</span></span>
<span id="cb2-10"></span>
<span id="cb2-11"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.exists</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"geo.parquet"</span>)) {</span>
<span id="cb2-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">download.file</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://static.data.gouv.fr/resources/sirene-geolocalise-parquet/20240107-143656/sirene2024-geo.parquet"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"geo.parquet"</span>)</span>
<span id="cb2-13">}</span>
<span id="cb2-14"></span>
<span id="cb2-15">with_register_geoarrow <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>() {</span>
<span id="cb2-16">  conn_ddb <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbConnect</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">duckdb</span>())</span>
<span id="cb2-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbExecute</span>(conn_ddb, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"LOAD spatial;"</span>)</span>
<span id="cb2-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbExecute</span>(conn_ddb, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CALL register_geoarrow_extensions()"</span>)</span>
<span id="cb2-19">  </span>
<span id="cb2-20">  query <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tbl</span>(conn_ddb, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sql</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SELECT * FROM read_parquet('geo.parquet') LIMIT {sample_size}"</span>))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb2-21">    arrow<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">to_arrow</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb2-22">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_as_sf</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">crs=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_crs</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2154</span>))</span>
<span id="cb2-23">  </span>
<span id="cb2-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbDisconnect</span>(conn_ddb, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shutdown =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb2-25">}</span>
<span id="cb2-26"></span>
<span id="cb2-27">with_st_read <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>() {</span>
<span id="cb2-28">  conn_ddb <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbConnect</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">duckdb</span>())</span>
<span id="cb2-29">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">on.exit</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbDisconnect</span>(conn_ddb, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shutdown =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>))</span>
<span id="cb2-30">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbExecute</span>(conn_ddb, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"LOAD spatial;"</span>)</span>
<span id="cb2-31">  </span>
<span id="cb2-32">  a <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_read</span>(</span>
<span id="cb2-33">    conn_ddb, </span>
<span id="cb2-34">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">query=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(</span>
<span id="cb2-35">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SELECT * REPLACE(geometry.ST_ASWKB() AS geometry) FROM read_parquet('geo.parquet') </span></span>
<span id="cb2-36"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      WHERE geometry IS NOT NULL LIMIT {sample_size}"</span></span>
<span id="cb2-37">    ), </span>
<span id="cb2-38">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">geometry_column =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"geometry"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb2-39">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_set_crs</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2154</span>)</span>
<span id="cb2-40">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbDisconnect</span>(conn_ddb, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shutdown =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb2-41">}</span>
<span id="cb2-42"></span>
<span id="cb2-43">with_get_query_aswkb <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>() {</span>
<span id="cb2-44">  conn_ddb <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbConnect</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">duckdb</span>())</span>
<span id="cb2-45">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">on.exit</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbDisconnect</span>(conn_ddb, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shutdown =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>))</span>
<span id="cb2-46">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbExecute</span>(conn_ddb, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"LOAD spatial;"</span>)</span>
<span id="cb2-47">  </span>
<span id="cb2-48">  query <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbGetQuery</span>(</span>
<span id="cb2-49">    conn_ddb, </span>
<span id="cb2-50">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(</span>
<span id="cb2-51">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-52"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      SELECT * REPLACE(geometry.ST_ASWKB() AS geometry) FROM read_parquet('geo.parquet') </span></span>
<span id="cb2-53"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      WHERE geometry IS NOT NULL LIMIT {sample_size}</span></span>
<span id="cb2-54"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      "</span></span>
<span id="cb2-55">    )</span>
<span id="cb2-56">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb2-57">    sf<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_as_sf</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">crs =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_crs</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2154</span>))</span>
<span id="cb2-58">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbDisconnect</span>(conn_ddb, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shutdown =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb2-59">}</span>
<span id="cb2-60"></span>
<span id="cb2-61">with_get_query_astxt <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>() {</span>
<span id="cb2-62">  conn_ddb <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbConnect</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">duckdb</span>())</span>
<span id="cb2-63">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">on.exit</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbDisconnect</span>(conn_ddb, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shutdown =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>))</span>
<span id="cb2-64">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbExecute</span>(conn_ddb, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"LOAD spatial;"</span>)</span>
<span id="cb2-65">  </span>
<span id="cb2-66">  query <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbGetQuery</span>(</span>
<span id="cb2-67">    conn_ddb, </span>
<span id="cb2-68">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glue</span>(</span>
<span id="cb2-69">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-70"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      SELECT * REPLACE(geometry.ST_ASText() AS geometry) FROM read_parquet('geo.parquet')</span></span>
<span id="cb2-71"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      WHERE geometry IS NOT NULL LIMIT {sample_size}</span></span>
<span id="cb2-72"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">      "</span></span>
<span id="cb2-73">    )</span>
<span id="cb2-74">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb2-75">    sf<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_as_sf</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">wkt =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"geometry"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">crs =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">st_crs</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2154</span>))</span>
<span id="cb2-76">}</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">res <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">timemoir</span>(</span>
<span id="cb3-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">with_register_geoarrow</span>(), </span>
<span id="cb3-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">with_st_read</span>(),</span>
<span id="cb3-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">with_get_query_aswkb</span>(),</span>
<span id="cb3-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">with_get_query_astxt</span>())</span></code></pre></div>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">res <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-2">  kableExtra<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>()</span></code></pre></div>
<div class="cell-output-display">
<table class="caption-top table table-sm table-striped small">
<colgroup>
<col style="width: 32%">
<col style="width: 11%">
<col style="width: 7%">
<col style="width: 13%">
<col style="width: 11%">
<col style="width: 11%">
<col style="width: 10%">
</colgroup>
<thead>
<tr class="header">
<th style="text-align: left;">fname</th>
<th style="text-align: right;">duration</th>
<th style="text-align: left;">error</th>
<th style="text-align: right;">start_mem</th>
<th style="text-align: right;">max_mem</th>
<th style="text-align: right;">cpu_user</th>
<th style="text-align: right;">cpu_sys</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">with_register_geoarrow()</td>
<td style="text-align: right;">41.378</td>
<td style="text-align: left;">NA</td>
<td style="text-align: right;">255304</td>
<td style="text-align: right;">26963376</td>
<td style="text-align: right;">36.374</td>
<td style="text-align: right;">6.016</td>
</tr>
<tr class="even">
<td style="text-align: left;">with_st_read()</td>
<td style="text-align: right;">202.641</td>
<td style="text-align: left;">NA</td>
<td style="text-align: right;">255272</td>
<td style="text-align: right;">25284744</td>
<td style="text-align: right;">192.910</td>
<td style="text-align: right;">10.382</td>
</tr>
<tr class="odd">
<td style="text-align: left;">with_get_query_aswkb()</td>
<td style="text-align: right;">203.976</td>
<td style="text-align: left;">NA</td>
<td style="text-align: right;">257732</td>
<td style="text-align: right;">25283144</td>
<td style="text-align: right;">193.012</td>
<td style="text-align: right;">11.819</td>
</tr>
<tr class="even">
<td style="text-align: left;">with_get_query_astxt()</td>
<td style="text-align: right;">165.089</td>
<td style="text-align: left;">NA</td>
<td style="text-align: right;">281832</td>
<td style="text-align: right;">24851760</td>
<td style="text-align: right;">175.733</td>
<td style="text-align: right;">9.077</td>
</tr>
</tbody>
</table>
</div>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(res)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nbc.github.io/posts/2025-07-10-st_as_sf/index_files/figure-html/output_benchmark-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="quelques-liens" class="level2">
<h2 class="anchored" data-anchor-id="quelques-liens">Quelques liens</h2>
<p>On ne trouve pas grand chose sur cette commande</p>
<ul>
<li><a href="https://youtu.be/tjNEoIYr_ag?t=1641">Un webinaire du R consortium</a></li>
<li><a href="https://github.com/duckdb/duckdb-spatial/issues/589">Un ticket de geoarrow</a></li>
</ul>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Information de session
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">devtools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">session_info</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pkgs =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"attached"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>─ Session info ───────────────────────────────────────────────────────────────
 setting  value
 version  R version 4.5.0 (2025-04-11)
 os       Ubuntu 22.04.5 LTS
 system   x86_64, linux-gnu
 ui       X11
 language (EN)
 collate  en_US.UTF-8
 ctype    en_US.UTF-8
 tz       Etc/UTC
 date     2025-07-14
 pandoc   3.7.0.2 @ /usr/bin/ (via rmarkdown)
 quarto   1.7.31 @ /usr/local/bin/quarto

─ Packages ───────────────────────────────────────────────────────────────────
 package  * version date (UTC) lib source
 DBI      * 1.2.3   2024-06-02 [1] RSPM (R 4.5.0)
 duckdb   * 1.3.0   2025-06-02 [1] RSPM (R 4.5.0)
 geoarrow * 0.3.0   2025-05-26 [1] RSPM (R 4.5.0)
 sf       * 1.0-21  2025-05-15 [1] RSPM (R 4.5.0)

 [1] /usr/local/lib/R/site-library
 [2] /usr/local/lib/R/library
 * ── Packages attached to the search path.

──────────────────────────────────────────────────────────────────────────────</code></pre>
</div>
</div>
</div>
</div>
</div>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Retour au sommet</a> ]]></description>
  <category>R</category>
  <category>duckdb</category>
  <category>arrow</category>
  <category>sf</category>
  <category>geoarrow</category>
  <guid>https://nbc.github.io/posts/2025-07-10-st_as_sf/</guid>
  <pubDate>Sat, 12 Jul 2025 00:00:00 GMT</pubDate>
  <media:content url="https://duckdb.org/images/logo-dl/DuckDB_Logo-horizontal.svg" medium="image" type="image/svg+xml"/>
</item>
<item>
  <title>Pourquoi éviter arrow::to_arrow() avec DuckDB + dplyr</title>
  <dc:creator>Nicolas Chuche</dc:creator>
  <link>https://nbc.github.io/posts/2025-07-10-to_arrow_bad/</link>
  <description><![CDATA[ 




<p>Une syntaxe souvent recommandée pour écrire un fichier parquet après des ordres <code>dplyr::tbl</code> est d’utiliser <code>arrow::to_arrow</code> avec <code>arrow::write_dataset</code> ou <code>arrow::write_parquet</code> :</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tbl</span>(con, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"read_parquet('geo.parquet')"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb1-2">  ...</span>
<span id="cb1-3">  arrow<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">to_arrow</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb1-4">  arrow<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write_dataset</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mon_dataset"</span>)</span></code></pre></div>
</div>
<p>Cette syntaxe fonctionne toujours mais le nouveau package <a href="https://duckplyr.tidyverse.org/index.html">duckplyr</a> propose une méthode beaucoup plus efficace :</p>
<div class="cell">
<div class="sourceCode cell-code" id="annotated-cell-2" style="background: #f1f3f5;"><pre class="sourceCode r code-annotation-code code-with-copy code-annotated"><code class="sourceCode r"><span id="annotated-cell-2-1">con <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbConnect</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">duckdb</span>())</span>
<span id="annotated-cell-2-2"></span>
<span id="annotated-cell-2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tbl</span>(con, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"read_parquet('geo.parquet')"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="annotated-cell-2-4">  ...</span>
<a class="code-annotation-anchor" data-target-cell="annotated-cell-2" data-target-annotation="1" onclick="event.preventDefault();">1</a><span id="annotated-cell-2-5" class="code-annotation-target">  duckplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_duckdb_tibble</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<a class="code-annotation-anchor" data-target-cell="annotated-cell-2" data-target-annotation="2" onclick="event.preventDefault();">2</a><span id="annotated-cell-2-6" class="code-annotation-target">  duckplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">compute_parquet</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"my_tbl.parquet"</span>)</span><div class="code-annotation-gutter-bg"></div><div class="code-annotation-gutter"></div></code></pre></div>
<div class="cell-annotation">
<dl class="code-annotation-container-grid">
<dt data-target-cell="annotated-cell-2" data-target-annotation="1">1</dt>
<dd>
<span data-code-cell="annotated-cell-2" data-code-lines="5" data-code-annotation="1">converti l’objet retourné par <code>tbl</code> en objet lisible par <code>duckplyr</code></span>
</dd>
<dt data-target-cell="annotated-cell-2" data-target-annotation="2">2</dt>
<dd>
<span data-code-cell="annotated-cell-2" data-code-lines="6" data-code-annotation="2">écrit le fichier parquet</span>
</dd>
</dl>
</div>
</div>
<p>Les deux lignes fonctionnent de la même façon que celle de <code>arrow</code> en étant <strong>beaucoup plus efficace</strong>.</p>
<section id="une-comparaison-rapide" class="level2">
<h2 class="anchored" data-anchor-id="une-comparaison-rapide">Une comparaison rapide</h2>
<p>Voici les résultats de tests de différentes façons de faire classiques (et le code pour les relancer chez vous ci-dessous) :</p>
<ul>
<li><code>with_arrow</code> : la méthode utilisant <code>arrow</code></li>
<li><code>with_duckplyr</code> : la méthode utilisant <code>duckplyr</code></li>
<li><code>with_copy_to</code> : la méthode utilisant le <code>COPY ... TO ...</code> de <code>duckdb</code> à titre de comparaison</li>
</ul>
<div class="cell">
<details class="code-fold">
<summary>Montre moi le code du benchmark</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(duckdb)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dplyr)</span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(arrow)</span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># pour afficher</span></span>
<span id="cb2-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(kableExtra)</span>
<span id="cb2-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># un outil de benchmark</span></span>
<span id="cb2-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(timemoir)</span>
<span id="cb2-8"></span>
<span id="cb2-9"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.exists</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"geo.parquet"</span>)) {</span>
<span id="cb2-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">download.file</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://static.data.gouv.fr/resources/sirene-geolocalise-parquet/20240107-143656/sirene2024-geo.parquet"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"geo.parquet"</span>)</span>
<span id="cb2-11">}</span>
<span id="cb2-12"></span>
<span id="cb2-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># la version full duckdb</span></span>
<span id="cb2-14">with_copy_to <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>() {</span>
<span id="cb2-15">  con <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbConnect</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">duckdb</span>())</span>
<span id="cb2-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">on.exit</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbDisconnect</span>(con, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shutdown =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>))</span>
<span id="cb2-17">  </span>
<span id="cb2-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbExecute</span>(con, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"COPY (FROM read_parquet('geo.parquet')) TO 'test.parquet' (FORMAT PARQUET, COMPRESSION ZSTD)"</span>)</span>
<span id="cb2-19">}</span>
<span id="cb2-20"></span>
<span id="cb2-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># La version `"historique" avec `arrow` :</span></span>
<span id="cb2-22">with_arrow <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>() {</span>
<span id="cb2-23">  con <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbConnect</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">duckdb</span>())</span>
<span id="cb2-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">on.exit</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbDisconnect</span>(con, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shutdown =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>))</span>
<span id="cb2-25"></span>
<span id="cb2-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tbl</span>(con, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"read_parquet('geo.parquet')"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb2-27">    arrow<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">to_arrow</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb2-28">    arrow<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write_dataset</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'test'</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">compression=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'zstd'</span>)</span>
<span id="cb2-29">}</span>
<span id="cb2-30"></span>
<span id="cb2-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Et la même en utilisant le nouveau package duckplyr :</span></span>
<span id="cb2-32">with_duckplyr <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>() {</span>
<span id="cb2-33">  con <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbConnect</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">duckdb</span>())</span>
<span id="cb2-34">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">on.exit</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbDisconnect</span>(con, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shutdown =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>))</span>
<span id="cb2-35"></span>
<span id="cb2-36">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tbl</span>(con, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"read_parquet('geo.parquet')"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb2-37">    duckplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_duckdb_tibble</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb2-38">    duckplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">compute_parquet</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"my_tbl.parquet"</span>)</span>
<span id="cb2-39">}</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">res <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">timemoir</span>(</span>
<span id="cb3-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">with_arrow</span>(), </span>
<span id="cb3-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">with_copy_to</span>(), </span>
<span id="cb3-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">with_duckplyr</span>()</span>
<span id="cb3-5">)</span></code></pre></div>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">res <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span></span>
<span id="cb4-2">  kableExtra<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>()</span></code></pre></div>
<div class="cell-output-display">
<table class="caption-top table table-sm table-striped small">
<colgroup>
<col style="width: 23%">
<col style="width: 13%">
<col style="width: 8%">
<col style="width: 14%">
<col style="width: 13%">
<col style="width: 13%">
<col style="width: 11%">
</colgroup>
<thead>
<tr class="header">
<th style="text-align: left;">fname</th>
<th style="text-align: right;">duration</th>
<th style="text-align: left;">error</th>
<th style="text-align: right;">start_mem</th>
<th style="text-align: right;">max_mem</th>
<th style="text-align: right;">cpu_user</th>
<th style="text-align: right;">cpu_sys</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">with_arrow()</td>
<td style="text-align: right;">61.147</td>
<td style="text-align: left;">NA</td>
<td style="text-align: right;">149664</td>
<td style="text-align: right;">21835576</td>
<td style="text-align: right;">76.045</td>
<td style="text-align: right;">17.691</td>
</tr>
<tr class="even">
<td style="text-align: left;">with_copy_to()</td>
<td style="text-align: right;">7.480</td>
<td style="text-align: left;">NA</td>
<td style="text-align: right;">149104</td>
<td style="text-align: right;">9096224</td>
<td style="text-align: right;">66.407</td>
<td style="text-align: right;">9.944</td>
</tr>
<tr class="odd">
<td style="text-align: left;">with_duckplyr()</td>
<td style="text-align: right;">7.013</td>
<td style="text-align: left;">NA</td>
<td style="text-align: right;">149104</td>
<td style="text-align: right;">11818744</td>
<td style="text-align: right;">54.990</td>
<td style="text-align: right;">10.564</td>
</tr>
</tbody>
</table>
</div>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(res)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nbc.github.io/posts/2025-07-10-to_arrow_bad/index_files/figure-html/output_benchmark-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<hr>
<p>Sur le serveur que j’utilise, la version <code>duckplyr</code> est <strong>6 fois plus rapide</strong> que la version <code>arrow</code> et consomme <strong>deux fois moins de mémoire</strong>, à égalité avec la méthode pure duckdb.</p>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>Si vous utilisez dplyr, arrêtez d’utiliser <code>to_arrow</code> et passez à <code>duckplyr</code></p>
</section>
<section id="quelques-liens" class="level2">
<h2 class="anchored" data-anchor-id="quelques-liens">Quelques liens</h2>
<ul>
<li>la <a href="https://duckplyr.tidyverse.org/articles/large.html">documentation de duckplyr</a></li>
</ul>
<hr>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Information de session
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">devtools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">session_info</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pkgs =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"attached"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>─ Session info ───────────────────────────────────────────────────────────────
 setting  value
 version  R version 4.5.0 (2025-04-11)
 os       Ubuntu 22.04.5 LTS
 system   x86_64, linux-gnu
 ui       X11
 language (EN)
 collate  en_US.UTF-8
 ctype    en_US.UTF-8
 tz       Etc/UTC
 date     2025-07-14
 pandoc   3.7.0.2 @ /usr/bin/ (via rmarkdown)
 quarto   1.7.31 @ /usr/local/bin/quarto

─ Packages ───────────────────────────────────────────────────────────────────
 package    * version    date (UTC) lib source
 arrow      * 20.0.0.2   2025-05-26 [1] RSPM (R 4.5.0)
 DBI        * 1.2.3      2024-06-02 [1] RSPM (R 4.5.0)
 dplyr      * 1.1.4      2023-11-17 [1] RSPM (R 4.5.0)
 duckdb     * 1.3.0      2025-06-02 [1] RSPM (R 4.5.0)
 kableExtra * 1.4.0      2024-01-24 [1] RSPM (R 4.5.0)
 timemoir   * 0.7.0.9000 2025-07-14 [1] Github (nbc/timemoir@01b6674)

 [1] /usr/local/lib/R/site-library
 [2] /usr/local/lib/R/library
 * ── Packages attached to the search path.

──────────────────────────────────────────────────────────────────────────────</code></pre>
</div>
</div>
</div>
</div>
</div>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Retour au sommet</a> ]]></description>
  <category>R</category>
  <category>duckdb</category>
  <category>arrow</category>
  <guid>https://nbc.github.io/posts/2025-07-10-to_arrow_bad/</guid>
  <pubDate>Fri, 11 Jul 2025 00:00:00 GMT</pubDate>
  <media:content url="https://duckplyr.tidyverse.org/logo.png" medium="image" type="image/png"/>
</item>
<item>
  <title>Comparer des performances DuckDB/arrow</title>
  <dc:creator>Nicolas Chuche</dc:creator>
  <link>https://nbc.github.io/posts/2025-07-10-benchmark/</link>
  <description><![CDATA[ 




<p>Quand il s’agit de comparer des façons de faire, l’idéal est de lancer le code dans des outils de benchmarks mais les outils “classiques” de R ne sont pas adaptés à la comparaison de code <code>duckdb</code> et/ou <code>arrow</code> :</p>
<ul>
<li><code>tictoc</code> ne retourne que le temps</li>
<li><code>bench</code> ne voit pas les allocations mémoires de duckdb et arrow</li>
<li>…</li>
</ul>
<p>Dans mes articles, j’utiliserais régulièrement <a href="https://github.com/nbc/timemoir">timemoir</a> écrit exprès pour ce genre de comparatifs :</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(timemoir)</span>
<span id="cb1-2"></span>
<span id="cb1-3">test_function <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(n) {</span>
<span id="cb1-4">  x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(n); <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(x)</span>
<span id="cb1-5">}</span>
<span id="cb1-6"></span>
<span id="cb1-7">res <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">timemoir</span>(</span>
<span id="cb1-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">test_function</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.2e7</span>),</span>
<span id="cb1-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">test_function</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4e7</span>),</span>
<span id="cb1-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">test_function</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e8</span>)</span>
<span id="cb1-11">)</span></code></pre></div>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">res <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> </span>
<span id="cb2-2">  kableExtra<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">kable</span>()</span></code></pre></div>
<div class="cell-output-display">
<table class="caption-top table table-sm table-striped small">
<colgroup>
<col style="width: 31%">
<col style="width: 12%">
<col style="width: 8%">
<col style="width: 13%">
<col style="width: 10%">
<col style="width: 12%">
<col style="width: 10%">
</colgroup>
<thead>
<tr class="header">
<th style="text-align: left;">fname</th>
<th style="text-align: right;">duration</th>
<th style="text-align: left;">error</th>
<th style="text-align: right;">start_mem</th>
<th style="text-align: right;">max_mem</th>
<th style="text-align: right;">cpu_user</th>
<th style="text-align: right;">cpu_sys</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">test_function(1.2e+07)</td>
<td style="text-align: right;">0.666</td>
<td style="text-align: left;">NA</td>
<td style="text-align: right;">110088</td>
<td style="text-align: right;">200888</td>
<td style="text-align: right;">0.619</td>
<td style="text-align: right;">0.048</td>
</tr>
<tr class="even">
<td style="text-align: left;">test_function(4e+07)</td>
<td style="text-align: right;">1.979</td>
<td style="text-align: left;">NA</td>
<td style="text-align: right;">110088</td>
<td style="text-align: right;">423768</td>
<td style="text-align: right;">1.861</td>
<td style="text-align: right;">0.116</td>
</tr>
<tr class="odd">
<td style="text-align: left;">test_function(1e+08)</td>
<td style="text-align: right;">3.376</td>
<td style="text-align: left;">NA</td>
<td style="text-align: right;">109364</td>
<td style="text-align: right;">892536</td>
<td style="text-align: right;">3.239</td>
<td style="text-align: right;">0.136</td>
</tr>
</tbody>
</table>
</div>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(res)</span></code></pre></div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nbc.github.io/posts/2025-07-10-benchmark/index_files/figure-html/unnamed-chunk-1-1.png" class="img-fluid figure-img" width="672"></p>
</figure>
</div>
</div>
</div>
<hr>
<p>Cela dit il ne s’agit pas de “vrais” benchmarks rigoureux, bien au delà des objectifs de ce blog mais de comparaisons rapides, destinées à se faire une idée approximative des performances relatives.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Information de session
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">devtools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">session_info</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pkgs =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"attached"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>─ Session info ───────────────────────────────────────────────────────────────
 setting  value
 version  R version 4.5.0 (2025-04-11)
 os       Ubuntu 22.04.5 LTS
 system   x86_64, linux-gnu
 ui       X11
 language (EN)
 collate  en_US.UTF-8
 ctype    en_US.UTF-8
 tz       Etc/UTC
 date     2025-07-14
 pandoc   3.7.0.2 @ /usr/bin/ (via rmarkdown)
 quarto   1.7.31 @ /usr/local/bin/quarto

─ Packages ───────────────────────────────────────────────────────────────────
 package  * version    date (UTC) lib source
 timemoir * 0.7.0.9000 2025-07-14 [1] Github (nbc/timemoir@01b6674)

 [1] /usr/local/lib/R/site-library
 [2] /usr/local/lib/R/library
 * ── Packages attached to the search path.

──────────────────────────────────────────────────────────────────────────────</code></pre>
</div>
</div>
</div>
</div>
</div>



<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Retour au sommet</a> ]]></description>
  <category>R</category>
  <category>benchmark</category>
  <guid>https://nbc.github.io/posts/2025-07-10-benchmark/</guid>
  <pubDate>Thu, 10 Jul 2025 00:00:00 GMT</pubDate>
  <media:content url="https://duckdb.org/images/logo-dl/DuckDB_Logo-horizontal.svg" medium="image" type="image/svg+xml"/>
</item>
</channel>
</rss>
