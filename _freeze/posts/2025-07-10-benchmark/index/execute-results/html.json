{
  "hash": "2ecb3586d4dc9b54174d7f8865d3dc50",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Comparer des performances DuckDB/arrow\"\ndescription: \"Comment évaluer la mémoire et le CPU de traitements long en duckdb/arrow\"\ndate: 2025-07-10\ncategories: [timemoir, benchmark]\nimage: https://duckdb.org/images/logo-dl/DuckDB_Logo-horizontal.svg\ndraft: false # setting this to `true` will prevent your post from appearing on your listing page until you're ready!\n---\n\nQuand il s'agit de comparer des façons de faire, l'idéal est de lancer le code dans des outils de benchmarks mais les outils \"classiques\" de R ne sont pas adaptés à la comparaison de code `duckdb` et/ou `arrow` :\n\n- `tictoc` ne retourne que le temps\n- `bench` ne voit pas les allocations mémoires de duckdb et arrow\n- ...\n\nDans mes articles, j'utiliserais régulièrement [timemoir](https://github.com/nbc/timemoir) écrit exprès pour ce genre de comparatifs :\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(timemoir)\n\ntest_function <- function(n) {\n  x <- rnorm(n); mean(x)\n}\n\nres <- timemoir(\n  test_function(1.2e7),\n  test_function(4e7),\n  test_function(1e8)\n)\n```\n\n```{.r .cell-code}\nres |> \n  kableExtra::kable()\n```\n\n::: {.cell-output-display}\n\n\n|fname                  | duration|error | start_mem| max_mem| cpu_user| cpu_sys|\n|:----------------------|--------:|:-----|---------:|-------:|--------:|-------:|\n|test_function(1.2e+07) |    0.666|NA    |    110088|  200888|    0.619|   0.048|\n|test_function(4e+07)   |    1.979|NA    |    110088|  423768|    1.861|   0.116|\n|test_function(1e+08)   |    3.376|NA    |    109364|  892536|    3.239|   0.136|\n\n\n:::\n\n```{.r .cell-code}\nplot(res)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\n---\n\nCela dit il ne s'agit pas de \"vrais\" benchmarks rigoureux, bien au delà des objectifs de ce blog mais de comparaisons rapides, destinées à se faire une idée approximative des performances relatives.\n\n::: {.callout-note collapse=true}\n## Information de session\n\n::: {.cell}\n\n```{.r .cell-code}\ndevtools::session_info(pkgs = \"attached\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.5.0 (2025-04-11)\n os       Ubuntu 22.04.5 LTS\n system   x86_64, linux-gnu\n ui       X11\n language (EN)\n collate  en_US.UTF-8\n ctype    en_US.UTF-8\n tz       Etc/UTC\n date     2025-07-14\n pandoc   3.7.0.2 @ /usr/bin/ (via rmarkdown)\n quarto   1.7.31 @ /usr/local/bin/quarto\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package  * version    date (UTC) lib source\n timemoir * 0.7.0.9000 2025-07-14 [1] Github (nbc/timemoir@01b6674)\n\n [1] /usr/local/lib/R/site-library\n [2] /usr/local/lib/R/library\n * ── Packages attached to the search path.\n\n──────────────────────────────────────────────────────────────────────────────\n```\n\n\n:::\n:::\n\n:::",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}