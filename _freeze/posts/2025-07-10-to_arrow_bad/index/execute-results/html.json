{
  "hash": "3b1a41cca3a94c01ee8abe7e1a2d93e5",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"to arrow bad/duckplyr good\"\ndescription: \"comment utiliser `arrow::to_arrow` est une très mauvaise idée avec `dplyr::tbl`\"\ndate: 07-10-2025\ncategories: [duckdb, arrow]\nimage: https://duckplyr.tidyverse.org/logo.png\ndraft: false # setting this to `true` will prevent your post from appearing on your listing page until you're ready!\n---\n\n\n\nUne syntaxe souvent recommandée pour écrire un fichier parquet après des ordres `dplyr::tbl` est d'utiliser `arrow::to_arrow` avec `arrow::write_dataset` ou `arrow::write_parquet` :\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntbl(con, \"read_parquet('geo.parquet')\") |>\n  ...\n  arrow::to_arrow() |>\n  arrow::write_dataset(\"mon_dataset\")\n```\n:::\n\n\n\nCette syntaxe fonctionne toujours mais le nouveau package [duckplyr](https://duckplyr.tidyverse.org/index.html) est beaucoup plus efficace :\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncon <- dbConnect(duckdb())\n\ntbl(con, \"read_parquet('geo.parquet')\") |>\n  ...\n  duckplyr::as_duckdb_tibble() |>\n  duckplyr::compute_parquet(\"my_tbl.parquet\")\n```\n:::\n\n\n\n# Une comparaison rapide\n\nVoici les résultats de tests de différentes façons de faire classiques (et le code pour les relancer chez vous ci-dessous) :\n\n- `with_arrow` : la méthode utilisant `arrow`\n- `with_duckplyr` : la méthode utilisant `duckplyr`\n- `with_copy_to` : la méthode utilisant le `COPY ... TO ...` de `duckdb` à titre de comparaison\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Montrez moi le code du benchmark\"}\nlibrary(duckdb)\nlibrary(dplyr)\nlibrary(arrow)\n# pour afficher\nlibrary(kableExtra)\n# un outil de benchmark\nlibrary(timemoir)\n\nif (!file.exists(\"geo.parquet\")) {\n  download.file(\"https://static.data.gouv.fr/resources/sirene-geolocalise-parquet/20240107-143656/sirene2024-geo.parquet\", \"geo.parquet\")\n}\n\n# la version full duckdb\nwith_copy_to <- function() {\n  con <- dbConnect(duckdb())\n  on.exit(dbDisconnect(con, shutdown = TRUE))\n  \n  dbExecute(con, \"COPY (FROM read_parquet('geo.parquet')) TO 'test.parquet' (FORMAT PARQUET, COMPRESSION ZSTD)\")\n}\n\n# La version `\"historique\" avec `arrow` :\nwith_arrow <- function() {\n  con <- dbConnect(duckdb())\n  on.exit(dbDisconnect(con, shutdown = TRUE))\n\n  tbl(con, \"read_parquet('geo.parquet')\") |>\n    arrow::to_arrow() |>\n    arrow::write_dataset('test', compression='zstd')\n}\n\n# Et la même en utilisant le nouveau package duckplyr :\nwith_duckplyr <- function() {\n  con <- dbConnect(duckdb())\n  on.exit(dbDisconnect(con, shutdown = TRUE))\n\n  tbl(con, \"read_parquet('geo.parquet')\") |>\n    duckplyr::as_duckdb_tibble() |>\n    duckplyr::compute_parquet(\"my_tbl.parquet\")\n}\n\n#| cache: true\ntimemoir(with_arrow(), \n         with_copy_to(), \n         with_duckplyr()) |>\n  kableExtra::kable()\n```\n\n\n\n\n::: {.cell-output-display}\n\n\n|fname           | duration|error | start_mem|  max_mem| cpu_user| cpu_sys|\n|:---------------|--------:|:-----|---------:|--------:|--------:|-------:|\n|with_arrow()    |   23.445|NA    |    143424| 17829400|   39.312|   9.904|\n|with_copy_to()  |    7.181|NA    |    143924|  7156140|   49.321|   5.535|\n|with_duckplyr() |    6.219|NA    |    144556|  7070052|   42.807|   5.835|\n\n\n:::\n:::\n\n\n\n(Sur ma machine) La version `duckplyr` est quasiment 4 fois plus rapide que la version `arrow`, à égalité avec la méthode pure duckdb\n\n\n::: {.callout-note collapse=true}\n## Information de session\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndevtools::session_info()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.5.1 (2025-06-13)\n os       Ubuntu 24.04.2 LTS\n system   x86_64, linux-gnu\n ui       X11\n language (EN)\n collate  fr_FR.UTF-8\n ctype    fr_FR.UTF-8\n tz       Europe/Paris\n date     2025-07-13\n pandoc   3.7.0.2 @ /usr/bin/ (via rmarkdown)\n quarto   1.6.42 @ /usr/local/bin/quarto\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package      * version    date (UTC) lib source\n arrow        * 20.0.0.2   2025-05-26 [2] RSPM (R 4.5.0)\n assertthat     0.2.1      2019-03-21 [2] RSPM (R 4.5.0)\n bit            4.6.0      2025-03-06 [2] RSPM (R 4.5.0)\n bit64          4.6.0-1    2025-01-16 [2] RSPM (R 4.5.0)\n cachem         1.1.0      2024-05-16 [2] RSPM (R 4.5.0)\n cli            3.6.5      2025-04-23 [2] RSPM (R 4.5.0)\n codetools      0.2-20     2024-03-31 [3] CRAN (R 4.5.1)\n DBI          * 1.2.3      2024-06-02 [2] RSPM (R 4.5.0)\n devtools       2.4.5      2022-10-11 [2] RSPM (R 4.5.0)\n dichromat      2.0-0.1    2022-05-02 [2] RSPM (R 4.5.0)\n digest         0.6.37     2024-08-19 [2] RSPM (R 4.5.0)\n dplyr        * 1.1.4      2023-11-17 [2] RSPM (R 4.5.0)\n duckdb       * 1.3.1      2025-06-23 [1] RSPM (R 4.5.0)\n ellipsis       0.3.2      2021-04-29 [2] RSPM (R 4.5.0)\n evaluate       1.0.3      2025-01-10 [2] RSPM (R 4.5.0)\n farver         2.1.2      2024-05-13 [2] RSPM (R 4.5.0)\n fastmap        1.2.0      2024-05-15 [2] RSPM (R 4.5.0)\n fs             1.6.6      2025-04-12 [2] RSPM (R 4.5.0)\n generics       0.1.4      2025-05-09 [2] RSPM (R 4.5.0)\n glue           1.8.0      2024-09-30 [2] RSPM (R 4.5.0)\n gt           * 1.0.0      2025-04-05 [1] RSPM (R 4.5.0)\n htmltools      0.5.8.1    2024-04-04 [1] RSPM (R 4.5.0)\n htmlwidgets    1.6.4      2023-12-06 [2] RSPM (R 4.5.0)\n httpuv         1.6.16     2025-04-16 [2] RSPM (R 4.5.0)\n jsonlite       2.0.0      2025-03-27 [2] RSPM (R 4.5.0)\n kableExtra   * 1.4.0      2024-01-24 [1] RSPM (R 4.5.0)\n knitr          1.50       2025-03-16 [2] RSPM (R 4.5.0)\n later          1.4.2      2025-04-08 [2] RSPM (R 4.5.0)\n lifecycle      1.0.4      2023-11-07 [2] RSPM (R 4.5.0)\n magrittr       2.0.3      2022-03-30 [2] RSPM (R 4.5.0)\n memoise        2.0.1      2021-11-26 [2] RSPM (R 4.5.0)\n mime           0.13       2025-03-17 [2] RSPM (R 4.5.0)\n miniUI         0.1.2      2025-04-17 [2] RSPM (R 4.5.0)\n pillar         1.11.0     2025-07-04 [1] RSPM (R 4.5.0)\n pkgbuild       1.4.8      2025-05-26 [2] RSPM (R 4.5.0)\n pkgconfig      2.0.3      2019-09-22 [2] RSPM (R 4.5.0)\n pkgload        1.4.0      2024-06-28 [2] RSPM (R 4.5.0)\n profvis        0.4.0      2024-09-20 [2] RSPM (R 4.5.0)\n promises       1.3.3      2025-05-29 [2] RSPM (R 4.5.0)\n ps             1.9.1      2025-04-12 [2] RSPM (R 4.5.0)\n purrr          1.0.4      2025-02-05 [2] RSPM (R 4.5.0)\n R6             2.6.1      2025-02-15 [2] RSPM (R 4.5.0)\n RColorBrewer   1.1-3      2022-04-03 [2] RSPM (R 4.5.0)\n Rcpp           1.0.14     2025-01-12 [2] RSPM (R 4.5.0)\n remotes        2.5.0      2024-03-17 [2] RSPM (R 4.5.0)\n rlang          1.1.6      2025-04-11 [2] RSPM (R 4.5.0)\n rmarkdown      2.29       2024-11-04 [2] RSPM (R 4.5.0)\n rstudioapi     0.17.1     2024-10-22 [2] RSPM (R 4.5.0)\n scales         1.4.0      2025-04-24 [2] RSPM (R 4.5.0)\n sessioninfo    1.2.3      2025-02-05 [2] RSPM (R 4.5.0)\n shiny          1.10.0     2024-12-14 [2] RSPM (R 4.5.0)\n stringi        1.8.7      2025-03-27 [2] RSPM (R 4.5.0)\n stringr        1.5.1      2023-11-14 [2] RSPM (R 4.5.0)\n svglite        2.2.1      2025-05-12 [2] RSPM (R 4.5.0)\n systemfonts    1.2.3      2025-04-30 [2] RSPM (R 4.5.0)\n textshaping    1.0.1      2025-05-01 [2] RSPM (R 4.5.0)\n tibble         3.3.0      2025-06-08 [2] RSPM (R 4.5.0)\n tidyselect     1.2.1      2024-03-11 [2] RSPM (R 4.5.0)\n timemoir     * 0.6.0.9000 2025-07-12 [1] Github (nbc/timemoir@2db402e)\n urlchecker     1.0.1      2021-11-30 [2] RSPM (R 4.5.0)\n usethis        3.1.0      2024-11-26 [2] RSPM (R 4.5.0)\n vctrs          0.6.5      2023-12-01 [2] RSPM (R 4.5.0)\n viridisLite    0.4.2      2023-05-02 [2] RSPM (R 4.5.0)\n xfun           0.52       2025-04-02 [2] RSPM (R 4.5.0)\n xml2           1.3.8      2025-03-14 [2] RSPM (R 4.5.0)\n xtable         1.8-4      2019-04-21 [2] RSPM (R 4.5.0)\n yaml           2.3.10     2024-07-26 [2] RSPM (R 4.5.0)\n\n [1] /home/nc/R/x86_64-pc-linux-gnu-library/4.5.1-noble\n [2] /usr/local/lib/R/site-library\n [3] /usr/local/lib/R/library\n * ── Packages attached to the search path.\n\n──────────────────────────────────────────────────────────────────────────────\n```\n\n\n:::\n:::\n\n\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}